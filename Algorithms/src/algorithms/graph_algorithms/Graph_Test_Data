Graph 1:
Undirected
{"A", "B", "C", "D", "E", "F", "G", "H", "I"}
{
	"B A", "C A", "D A", "C B", "B D", "C D", "C E", "D H",
	"E F", "E G", "F I", "G H", "G I", "H I"
}
BFS result: {"A", "B", "C", "D", "H", "F", "G", "I"}
DFS result: {"A", "B", "C", "H", "G", "D", "F", "I"}

Graph 2:
Undirected
{"A", "B", "C", "D"}
{
	"A B", "A D", "D B", "D C" 
}
BFS result: {"A", "B", "C", "D"}
DFS result: {"A", "B", "D", "C"}

Graph 3:
Undirected
{"A", "B", "C", "D", "E", "F", "G", "H"}
{
	"B A", "C A", "D A", "C B", "B D", "C D", "C F", "F E",
	"E G", "F G", "F H", "G H", "H E"
}
BFS result: {"A", "B", "C", "D", "F", "E", "G", "H"}
DFS result: {"A", "B", "C", "D", "F", "E", "G", "H"}

Graph 4:
Undirected
{"A", "B", "C", "D", "E", "F", "G"}
{
	"A B", "D A", "B D", "A C", "C D", "E F", "F G", "E G"
}
BFS result: {"A", "B", "C", "D", "E", "F", "G"}
DFS result: {"A", "B", "D", "C", "E", "F", "G"}


Graph 5:
Directed
{"A", "B", "C", "D", "E", "F", "G", "H", "I"}
{
	"A C", "A D", "B A", "D B", "D C", "C E", "E F", "G E", "G I", "F I", "H I", "G H", "H D"
}
BFS result: {"A", "C", "D", "E", "B", "F", "I", "G", "H"}
DFS result: {"A", "C", "E", "F", "I", "D", "B", "G", "H"}

Graph 6:
Directed
{"A", "B", "C", "D", "E", "F", "G", "H"}
{
	"A C", "A D", "B A", "D B", "D C", "C B", "F C", "E G", "G H", "H F", "F E", "F G"
}
BFS result: {"A", "C", "D", "B", "E", "G", "H", "F"}
DFS result:{"A", "C", "B", "D", "E", "G", "H", "F"}

Graph 7:
Directed
{"A", "B", "C", "D", "E", "F", "G"}
{
	"A C", "C D", "D B", "B A", "E G", "F G", "F E"
}
BFS result: {"A", "C", "D", "B", "E", "G", "F"}
DFS result: {"A", "C", "D", "B", "E", "G", "F"}

Graph 8:
Directed
{"A", "B", "C", "D"}
{
	"A B", "D B", "C D", "C A"
}
BFS result: {"A", "B", "C", "D"}
DFS result: {"A", "B", "C", "D"}

Graph 9:
Undirected
{"A", "B", "C", "D", "E"}
{"A B", "D A", "E B", "C D", "D E"}
Cycle is present

Graph 10:
Undirected
{"A", "B", "C", "D", "E", "F"}
{"A B", "D A", "C B", "E D", "E F"}
Cycle is not present

Graph 11:
Undirected
{"A", "B", "C", "D", "E", "F", "G"}
{"A B", "C B", "C D", "D E", "F E", "C G"}
Cycle is not present

Graph 12:
Directed
{"A", "B", "C", "D", "E"}
{"A B", "B C", "E A", "C D", "C E"}
Cycle is present

Graph 14:
Directed
{"A", "B", "C", "D", "E", "F"}
{"B C", "C D", "D F", "E D", "E A", "A B"}
Cycle is not present

Graph 15:
Directed
{"A", "B", "C", "D", "E", "F", "G"}
{"A B", "D B", "C B", "C A", "A D", "C D", "B E", "G D", "E F", "E G"}
Cycle is not present

Graph 16:
Undirected
{"A", "B", "C", "D", "E", "F", "G"}
{"A B", "C B", "C D", "D E", "F E", "C G"}
Bipartite

Graph 17:
Undirected
{"A", "B", "C", "D", "E", "F", "G"}
{"A B", "C B", "C D", "D E", "F E", "C G", "E A"}
Not Bipartite

Graph 18:
Undirected
{"A", "B", "C", "D", "E", "F", "G"}
{"A B", "C B", "C D", "D E", "F E", "C G", "F A}
Bipartite

Graph 19:
Directed
{"A", "B", "C", "D", "E"}
{"B A", "A C", "D C", "B D", "C E"}
Topo sort dfs result: {"B", "D", "A", "C", "E"}
Topo sort bfs result: {"B", "A", "D", "C", "E"}

Graph 20:
Undirected
{"A", "B", "C", "D", "E", "F", "G", "H", "I"}
{"A B", "B D", "D A", "D E", "B C", "C G", "G F", "F E", "G H", "I G", "H I"}
sda[]: [0, 1, 2, 1, 2, 3, 3, 4, 4]

Graph 21:
Undirected
{"A", "B", "C", "D", "E", "F", "G", "H", "I"}
{"A B 3", "B C 4", "C A 8", "E B 4", "C D 1", "E F 1", "D E 3", "D F 2", "H F 5", "F G 2", "G I 1", "I H 2", "E H 6"}
sda[]: [0, 3, 7, 8, 7, 8, 10, 13, 11]

Graph 22:
Undirected
{"A", "B", "C", "D", "E", "F", "G"}
{"A B 5", "A C 1", "B D 1", "G D 2", "F E 1", "C E 1", "F B 1", "D F 3"}
sda[]: [0, 4, 1, 5, 2, 3, 7]

Graph 23:
Directed
{"A", "B", "C", "D", "E", "F", "G"}
{"A B 5", "A C 1", "C E 1", "E F 1", "B D 1", "D G 2", "F B 1", "F D 3"}
sda[]: [0, 4, 1, 5, 2, 3, 7]

Graph 24:
Directed
{"A", "B", "C", "D"}
{"A B 2", "D A 6", "B C 2", "C D 1"}
sda[]: [0, 2, 4, 5]

Graph 25:
Directed
{"A", "B", "C", "D"}
{"A B 2", "D A -6", "B C 2", "C D 1"}
sda[]: Can't be determined because the while loop in BFS algorithm would never terminate.

